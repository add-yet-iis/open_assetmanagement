The purpose of this tutorial is, to assisst the
installation of the open-assetmanagemt Web-Server

It ist based on the Kali VM (https://www.kali.org/get-kali/#kali-virtual-machines)
in VirtualBox, but should work for VMWare or others as well.

Step 1:
    Download and Extract (7zip) the Kali Virtual Machine
    (https://www.kali.org/get-kali/#kali-virtual-machines)

    If you want to use another Operating System, be aware,
    that you might have to install Python, Pip, NMAP,
    Netdiscover, CrackMapExec or others

    You can also use the Kali ISO
    (https://www.kali.org/get-kali/#kali-installer-images)

    Add the Kali VM and start it

    If you want to use the Test Network, you will have to make changes on the network
    adapter settings of the vm
    Add a second adapter and set it to internal network
    Then set the static ip of the kali VM to one in the Range (10.0.0.0/24)
    of the testing network


Step 2:
    Get the latest version of open-assetmanagement from the git-repository.
    (https://github.com/lucapoehler/open_assetmanagement)
    You can use your favorite IDE or just the default Kali Text Editor.
    The folder should look like this:
        open_assetmanagement
        ├── open_assetmanagemen
        │   ├── docs
        │   ├── inventory
        │   ├── manage.py
        │   ├── open_assetmanagement
        │   ├── polls
        │   └── templates
        ├── README.md
        ├── README.rst
        ├── requirements.txt
        ├── testdata
        │   ├── csv_test.CSV
        │   ├── csv_test_no_supplier.CSV
        │   └── xlsx_test.xlsx
        └── Walktrough.txt

Step 3:
    Use the default kali Account. Dont use sudo unless specified
    Create a python virtual environment (optional) and install the requirements
    $ python -m venv venv
        You may need to install some packages using the command provided (sudo apt install python3.10-venv)
    $ source venv/bin/activate(venv)
    Navigate to the Folder containing the requirements.txt and from within the venv
    (venv) $  pip install -r requirements.txt

    You can check if the django installation worked:
    ┌──(venv)─(kali㉿kali)-[~/Desktop/open_assetmanagement-master]
    └─$ python
    Python 3.10.7 (main, Oct  1 2022, 04:31:04) [GCC 12.2.0] on linux
    Type "help", "copyright", "credits" or "license" for more information.
    >>> import django
    >>> django.get_version()
    '4.1.2'

    <-- Initialize the Database -->
    (venv) python manage.py makemigrations
    (venv) python manage.py migrate

    <-- To start the development server -->
    (venv) python manage.py runserver

    Now you should be able to acces the Server under the address stated.
    To login, create a new user or use the admin account for access to the admin panel
    Username: admin
    PW: Vsc&fbce4WzHQv

    BE CAREFUL THE APP IS UNDER ACTIVE DEVELOPMENT.
    BUGS MAY OCCUR

Step 4:
    To use the Networkdiscovery Function you need NMAP, Netdiscover and CrackMapExec
    (Preinstalled on Kali)
    Netdiscover and NMAP need Sudo Priveledges to run corectly because the have to
    access system ports
    There are several ways to make this possible:
        1. Run the Server as Sudo oder Root (NOT RECOMMENDED! Very Unsafe)
        2. Give python or nmap passwordless sudo access (Also not recommended and
                                                            very Unsafe, possible PrivEsc)
        2a. Give the specific script passwordless sudo access, and make it only writable
                                    by the root user, so ther cant be changes (version used)
            Add the following line to the /etc/sudoers File:
            ALL  ALL=(ALL) NOPASSWD: <full_path_to_folder>/open_assetmanagement/open_assetmanagement/inventory/network_discovery_module.py
            This lets any user, run the networkdiscovery script as sudo
        3. Install NMAP with capabilities (https://secwiki.org/w/Running_nmap_as_an_unprivileged_user)
        4. Somehow ask for the sudo password in the webinterface and pass it to the backend

